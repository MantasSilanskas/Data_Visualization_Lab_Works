package main

import (
	"log"
	"net/http/internal"

	"github.com/MantasSilanskas/Data_Visualization_Lab_Works/internal"
	"github.com/MantasSilanskas/Data_Visualization_Lab_Works/internal/db"
	"github.com/MantasSilanskas/Data_Visualization_Lab_Works/internal/filter"
	"github.com/MantasSilanskas/Data_Visualization_Lab_Works/internal/utils"
	"go.mongodb.org/mongo-driver/bson"
)

const filename = "filesNames.csv"

func main() {

	client, err := db.Connection()
	if err != nil {
		log.Println("Failed to connect to database. Error:", err)
		return
	}

	err = internal.InsertData(client, filename)
	if err != nil {
		log.Println("Failed to insert data to database. Error:", err)
		return
	}

	names, err := db.UniqueDevicesIDs(client)
	if err != nil {
		log.Println("Failed to extract file names from database. Error:", err)
	}

	for _, v := range names {
		data, err := db.FilterDevicesByID(client, bson.M{"deviceId": v})
		if err != nil {
			log.Println("Failed to extract", v, "data from database. Error:", err)
			return
		}
		filteredData, err := filter.FilterDeviceData(data, v)
		if err != nil {
			log.Println("Failed to filter out device data by type. Error:", err)
			return
		}

		results := utils.CalcDeviceData(filteredData)

		log.Println(results)
	}

	// bar := charts.NewBar()

	// bar.SetGlobalOptions(charts.WithTitleOpts(opts.Title{
	// 	Title:    "My first bar chart generated by go-echarts",
	// 	Subtitle: "It's extremely easy to use, right?",
	// }))
	// bar.SetXAxis(names).
	// 	AddSeries("Category A", generateBarItems()).
	// 	AddSeries("Category B", generateBarItems())
	// // Where the magic happens
	// f, _ := os.Create("bar.html")
	// bar.Render(f)
}
